package com.ssdut411.app.questionanswer.activity.question;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AnimationUtils;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;

import com.ssdut411.app.questionanswer.R;
import com.ssdut411.app.questionanswer.activity.system.CommonAdapter;
import com.ssdut411.app.questionanswer.model.model.QuestionModel;
import com.ssdut411.app.questionanswer.model.model.SelfTestModel;
import com.ssdut411.app.questionanswer.utils.AnimUtils;
import com.ssdut411.app.questionanswer.utils.L;
import com.ssdut411.app.questionanswer.widget.ListViewForScrollView;

import java.util.List;

/**
 * Created by yao_han on 2016/3/2.
 */
public class EvaluationFragment extends Fragment implements View.OnClickListener {

    private ScrollView svScroll;
    private LinearLayout llGrade;
    private TextView tvGrade;
    private LinearLayout llEvaluation;
    private LinearLayout llEvaluationGone;
    private ImageView ivEvaluationMenu;
    private ListViewForScrollView lvEvaluation;
    private LinearLayout llRank;
    private TextView tvRankMenu;
    private LinearLayout llPoint;
    private ImageView ivPointMenu;
    private ListViewForScrollView lvPoint;

    private boolean closeGrade = false;
    private boolean closeEvaluation = false;
    private boolean closePoint = false;

    private SelfTestModel selfTestModel;
    private String source;

    static EvaluationFragment newInstance(SelfTestModel selfTestModel, String source) {
        EvaluationFragment fragment = new EvaluationFragment();
        fragment.selfTestModel = selfTestModel;
        fragment.source = source;
        return fragment;
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_evaluation_situation, container, false);
        L.i("evaluation");
        initView(view);
        showView();
        return view;
    }

    private void initView(View view) {
        svScroll = (ScrollView) view.findViewById(R.id.sv_scroll);
        llGrade = (LinearLayout) view.findViewById(R.id.ll_report_grade);
        tvGrade = (TextView) view.findViewById(R.id.tv_report_grade);
        llEvaluation = (LinearLayout) view.findViewById(R.id.ll_report_evaluation);
        llEvaluationGone = (LinearLayout) view.findViewById(R.id.ll_report_evaluation_gone);
        ivEvaluationMenu = (ImageView) view.findViewById(R.id.iv_report_evaluation_menu);
        lvEvaluation = (ListViewForScrollView) view.findViewById(R.id.lv_report_evaluation);
        llRank = (LinearLayout) view.findViewById(R.id.ll_report_rank);
        tvRankMenu = (TextView) view.findViewById(R.id.tv_report_rank_menu);
        llPoint = (LinearLayout) view.findViewById(R.id.ll_report_point);
        ivPointMenu = (ImageView) view.findViewById(R.id.iv_report_point_menu);
        lvPoint = (ListViewForScrollView) view.findViewById(R.id.lv_report_point);

        llGrade.setOnClickListener(this);
        llEvaluation.setOnClickListener(this);
        llRank.setOnClickListener(this);
        llPoint.setOnClickListener(this);
    }

    protected void showView() {
        svScroll.smoothScrollTo(0, 0);

        if (source.equals("test")) {
            llEvaluation.setVisibility(View.GONE);
            lvEvaluation.setVisibility(View.GONE);
            llRank.setVisibility(View.GONE);
        } else {
//            setRightText(getString(R.string.reply));
        }
        setGrade();

        setEvaluation();

        setPoint();

    }

    private void setPoint() {
        final List<String> pointList = selfTestModel.getTestSitesList();
        lvPoint.setAdapter(new CommonAdapter<String>(getActivity(), pointList, R.layout.item_listview) {
            @Override
            public void convert(com.ssdut411.app.questionanswer.activity.system.ViewHolder viewHolder, String s, int position) {
                viewHolder.getTextView(R.id.item_center).setText(s);
            }
        });
        lvPoint.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                Intent intent = new Intent(getActivity(), MyTestActivity.class);
                intent.putExtra("point", pointList.get(position));
                startActivity(intent);
            }
        });
    }

    private void setEvaluation() {
        //        lvEvaluation.setAdapter(new CommonAdapter<Map<String, String>>(this, reportCard.getEvaluation(), R.layout.item_question_evaluation) {
//
//            @Override
//            public void convert(com.ssdut411.questions.ViewHolder viewHolder, Map<String, String> stringStringMap) {
//                L.i("role = " + stringStringMap.get("role"));
//                if (stringStringMap.get("role") != null && stringStringMap.get("role").equals(getResources().getString(R.string.teacher))) {
//                    viewHolder.getImageView(R.id.iv_report_item_image).setImageResource(R.mipmap.ic_launcher);
//                } else if (stringStringMap.get("role") != null && stringStringMap.get("role").equals(getResources().getString(R.string.student))) {
//                    viewHolder.getImageView(R.id.iv_report_item_image).setImageResource(R.mipmap.icon_student);
//                } else if (stringStringMap.get("role") != null && stringStringMap.get("role").equals(getResources().getString(R.string.parent))) {
//                    viewHolder.getImageView(R.id.iv_report_item_image).setImageResource(R.mipmap.icon_parent);
//                }
//                viewHolder.getTextView(R.id.tv_report_item_role).setText(stringStringMap.get("role"));
//                viewHolder.getTextView(R.id.tv_report_item_evaluation).setText(stringStringMap.get("detail"));
//            }
//        });

    }

    private void setGrade() {
        List<Boolean> list = selfTestModel.getResultList();
        int count = 0;
        for (Boolean b : list) {
            if (b) {
                count++;
            }
        }
        tvGrade.setText((int) ((double) count / list.size() * 100) + "");
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.ll_report_evaluation:
                changeEvaluationState();
                break;
            case R.id.ll_report_rank:
                startClassRankActivity();
                break;
            case R.id.ll_report_point:
                changePointState();
                break;
        }
    }

    private void startClassRankActivity() {
//        Intent intent = new Intent(ReportCardActivity.this, ClassRankActivity.class);
//        intent.putExtra("list", GsonUtils.gsonToJsonString(reportCard.getRank()));
//        startActivity(intent);
    }

    private void changeEvaluationState() {
        if (closeEvaluation) {
            closeEvaluation = false;
            lvEvaluation.setVisibility(View.VISIBLE);
        } else {
            closeEvaluation = true;
            lvEvaluation.setVisibility(View.GONE);
        }
    }


    private void changePointState() {
        if (closePoint) {
            closePoint = false;
            AnimUtils.translateOpenDown(getActivity(), lvPoint);
            AnimUtils.rotateLeft(getActivity(), ivPointMenu);
        } else {
            closePoint = true;
            AnimUtils.translateCloseUp(getActivity(), lvPoint);
            AnimUtils.rotateRight(getActivity(), ivPointMenu);
        }
    }
}
